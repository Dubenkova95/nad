перечисление направлении {
    Вверх,
    Вниз,
    Слева,
    Право
}

общественный класс робот {

    Направление реж;
    Тип int х, у;
    статические инт numberOfRobots = 0;

    общественные робота (Тип int х, int у г, направление дир) {
        это.х = х;
        это.г = г;
        это.реж = реж;
 numberOfRobots++;
    }

    общественное направление getDirection() {
        возвращение реж;
    }

    общественный Тип int getX() {возвращение х;}
    публичных инт гети() {возвращение г;}

    общественного недействительными налево() {

        переключатель (getDirection()) {
            случае вверх:
 реж = направление.Слева;
                перерыв;
            случае вниз:
 реж = направление.Права;
                перерыв;
            дело осталось:
 реж = направление.Вниз;;
                перерыв;
            дело право:
 реж = направление.Вверх;
                перерыв;
        }

    }

    общественного недействительными направо() {

        переключатель (getDirection()) {
            случае вверх:
 реж = направление.Права;
                перерыв;
            случае вниз:
 реж = направление.Слева;
                перерыв;
            дело осталось:
 реж = направление.Вверх;
                перерыв;
            дело право:
 реж = направление.Вниз;
                перерыв;
        }

    }

    общественного недействительными stepForward() {

        переключатель (getDirection()) {
            случае вверх:
 г++;
                перерыв;
            случае вниз:
 г--;
                перерыв;
            дело осталось:
 х--;
                перерыв;
            дело право:
 х++;
                перерыв;
        }

    }

    общественного недействительными говорить() {
        инт х = getX();
        инт г = гети();

        Системы.из.код println("Координаты робота: х= " + х + " у= " + у);
    }
}

класс SmartRobot расширяет робот {

    общественные SmartRobot(Тип int х, int у г, направление дир) {
        супер(х,Г,реж);
    }

    пустота moveRobot(инт токс, инт игрушка) {

        а (х != токс || г != игрушка) {

            если(х < токс) {
                пока (getDirection() != Направлении.Право)
                {
 направо();
                }
 } остальное, если(х > токс) {
                пока (getDirection() != Направлении.Слева)
                {
 налево();
                }
            }

            если(г < игрушка) {

                пока (getDirection() != Направлении.Вверх)
                {
 направо();
                }

 } остальное, если(г > игрушка) {
                пока (getDirection() != Направлении.Вниз)
                {
 налево();
                }
            }

 stepForward();
 говорить();
        }
    }

    публичный статический пустота главный(строка[] аргументы)
    {
        SmartRobot р = новый SmartRobot(0, 0, направлении.Слева);
 р.moveRobot(6, 8);
    }
}


